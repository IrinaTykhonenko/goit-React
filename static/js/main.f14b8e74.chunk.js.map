{"version":3,"sources":["components/Form.js","components/ColorPicker/ColorPicker.js","App.js","index.js"],"names":["Form","state","name","tag","experience","licence","nameInputId","shortid","generate","tagInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","handleCheckbox","console","log","checked","this","htmlFor","type","onChange","id","disabled","Component","ColorPicker","activeOptionIdx","setActiveIndex","index","makeOptionClassName","classNames","options","label","className","map","color","style","backgroundColor","onClick","colorPickerOptions","App","formSubmitHandler","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f14b8e74.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    tag: \"\",\n    experience: \"junior\",\n    licence: false,\n  };\n\n  nameInputId = shortid.generate();\n  tagInputId = shortid.generate();\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      tag: \"\",\n    });\n  };\n\n  handleCheckbox = (e) => {\n    console.log(this.state.licence);\n    this.setState({ licence: e.currentTarget.checked });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>\n          Имя\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          ></input>\n        </label>\n        <label htmlFor={this.tagInputId}>\n          Прозвище\n          <input\n            type=\"text\"\n            name=\"tag\"\n            value={this.state.tag}\n            onChange={this.handleChange}\n            id={this.tagInputId}\n          ></input>\n        </label>\n        <p>Ваш уровень:</p>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"experience\"\n            value=\"junior\"\n            onChange={this.handleChange}\n            checked={this.state.experience === \"junior\"}\n          />\n          junior\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"experience\"\n            value=\"middle\"\n            onChange={this.handleChange}\n            checked={this.state.experience === \"middle\"}\n          />\n          middle\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"experience\"\n            value=\"senior\"\n            onChange={this.handleChange}\n            checked={this.state.experience === \"senior\"}\n          />\n          senior\n        </label>\n        <label>\n          <input\n            type=\"checkbox\"\n            name=\"licence\"\n            checked={this.state.licence}\n            onChange={this.handleCheckbox}\n          />\n          Согласен с условиями\n        </label>\n\n        <button type=\"submit\" disabled={!this.state.licence}>\n          Отправить\n        </button>\n      </form>\n    );\n  }\n}\n\n// handleNameChange = (event) => {\n//   this.setState({ name: event.currentTarget.value });\n// };\n\n// handleTagChange = (event) => {\n//   this.setState({ tag: event.currentTarget.value });\n// };\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport \"./ColorPicker.css\";\nimport classNames from \"classnames\";\n\nclass ColorPicker extends Component {\n  state = {\n    activeOptionIdx: 3,\n  };\n\n  setActiveIndex = (index) => {\n    this.setState({ activeOptionIdx: index });\n  };\n\n  makeOptionClassName = (index) => {\n    return classNames(\"ColorPicker__option\", {\n      \"ColorPicker__option--active\": index === this.state.activeOptionIdx,\n    });\n\n    // const optionClasses = [\"ColorPicker__option\"];\n\n    // if (index === this.state.activeOptionIdx) {\n    //   optionClasses.push(\"ColorPicker__option--active\");\n    // }\n    // return optionClasses.join(\" \");\n  };\n\n  render() {\n    const { activeOptionIdx } = this.state;\n    const { options } = this.props;\n    const { label } = options[activeOptionIdx];\n\n    return (\n      <div className=\"ColorPicker\">\n        <h2 className=\"ColorPicker__title\">Color Picker</h2>\n        <p>Выбран цвет: {label}</p>\n        <div>\n          {options.map(({ label, color }, index) => (\n            <button\n              key={label}\n              className={this.makeOptionClassName(index)}\n              style={{\n                backgroundColor: color,\n              }}\n              onClick={() => this.setActiveIndex(index)}\n            ></button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n","import React, { Component } from \"react\";\nimport Form from \"./components/Form\";\n// import Logo from \"./components/Logo\";\n// import PaintingList from \"./components/PaintingList\";\n// import paintings from \"./paintings.json\";\n// import Panel from \"./components/Panel\";\n// import Counter from \"./components/Counter\";\n// import Dropdown from \"./components/Dropdown\";\nimport ColorPicker from \"./components/ColorPicker\";\n// import TodoList from \"./components/TodoList\";\n// import initialTodos from \"./Todo.json\";\n\nconst colorPickerOptions = [\n  { label: \"red\", color: \"#F44336\" },\n  { label: \"green\", color: \"#4CAF50\" },\n  { label: \"blue\", color: \"#2196F3\" },\n  { label: \"grey\", color: \"#607D8B\" },\n  { label: \"pink\", color: \"#E91E63\" },\n  { label: \"indigo\", color: \"#3F51B5\" },\n];\n\nclass App extends Component {\n  state = {\n    // todos: initialTodos,\n  };\n\n  // deleteTodo = (todoId) => {\n  //   this.setState((prevState) => ({\n  //     todos: prevState.todos.filter((todo) => todo.id !== todoId),\n  //   }));\n  // };\n\n  formSubmitHandler = (data) => {\n    console.log(data);\n  };\n\n  render() {\n    // const { todos } = this.state;\n    // const totalTodoCount = todos.length;\n    // const completedTodosCount = todos.reduce(\n    //   (acc, todo) => (todo.completed ? acc + 1 : acc),\n    //   0\n    // );\n\n    return (\n      <>\n        <div>\n          <Form onSubmit={this.formSubmitHandler} />\n\n          {/* <p>Общее количество: {totalTodoCount}</p>\n          <p>Количество выполненных: {completedTodosCount}</p> */}\n        </div>\n\n        {/* <TodoList todos={todos} onDeleteTodo={this.deleteTodo} /> */}\n        {/* <Dropdown />\n        <Counter />\n        <Panel title=\"Latest News\">\n          <p>lorem lorem lorem</p>\n          <p>lorem</p>\n        </Panel>\n        <Panel>\n          <p>lorem</p>\n        </Panel>\n        <Logo text=\"Main component-container for application\" />\n        <PaintingList paintings={paintings} />\n         */}\n        <ColorPicker options={colorPickerOptions} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//ReactDOM.render(<App />, document.getElementById(\"root\"));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// const link = React.createElement(\"a\", { href: \"reactjs.org\" }, \"Link\");\n\n// ReactDOM.render(link, document.getElementById(\"root\"));\n\n// const jsxLink = <a href=\"reactjs.org\">Link</a>;\n// console.log(link);\n// console.log(jsxLink);\n\n//ReactDOM.render(template, document.getElementById(\"root\"));\n"],"sourceRoot":""}